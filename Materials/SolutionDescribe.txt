работа выполнена на языке python
зависимости pydub, librosa, keras, theano
http://benanne.github.io/2014/08/05/spotify-cnns.html

так так в задании было указано требование - предсказание с точностью не менее 0.8, то я предположил, что метрикой оценивания является accuracy
1. В качестве обучающей выборки я буду использовать данные, разбитые по классам в соответсвии с моделью MIREX.
2. Данные буду извлекать с сайта musicbed.com, так как там более одназначная классификация. Буду учитывать то, что классы пересекаются, удалю пересечение классов.
3. В данных присутвуют watermarks. Он повторяется каждые 20 секунд, начиная в интервале [7;10] секунды, продолжительностью 1 секунда.
Удалю эти watermarks - буду удалять 3 секунды трека кажные 20 секунд. Далее отрежу от трека начало ~ 7 секунд, из соображений, что в начале трека может присутствовать проигрыш, по которому не всегда однозначно можно определить настроение трека.
Далее разобью оставшийся трек на куски продолжительностью в 17 секунд - для определения настроение трека этого будет достаточно и этим я увеличу обучающую выборку. При этом я буду учитывать то, что в конечном итоге я хочу получить сбалансированную выборку. На валидацию оставлю музыкальные треки, не учавствовших в обучении.
Так как данные скачаны из одного источника, пересечение классов буду смотреть по имени трека.
Не смог понять значимого отличия 4 кластера(Witty, Humorous, Whimsical, Wry, Campy, Quirky, Silly) от остальных, удалил этот класс. Итого классификация будет производиться по 4 классам(здесь классификация, соответвенно меткам классов на сайте musicbed.ru): Tense, Angry, Happy, Sad.
Сбор датасета произведу вручную, так как структура веб страницы сложная и нецелесообразно тратить время для написания кода, при требование в малых количествах исходных данных.
Собрано данных без обработки Angry - 125, Happy - 134, Sad - 129, Tense - 123 трека.
Преобразую стерео аудиозапись в моно.
Для преобразование в log mal spectrogram буду использовать librosa
Далее предсказание класса буду выполнять с помощью сверточной нейронной сети. Предварительно полученные данные с предущего шага отнормирую в диапазоне [-1,1]
Для работы с CNN буду использовать keras и theano, обучая на GPU GTX 760.
Финальный размер обучающей выборки взят весьма малый - по 25 семплов на класс, так как та архтектура нейронной сети, которую я задал, работает весьма медленно.